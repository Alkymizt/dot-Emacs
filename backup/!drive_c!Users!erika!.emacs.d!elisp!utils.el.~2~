;; utils.el
;;

;; source: http://steve.yegge.googlepages.com/my-dot-emacs-file
(defun rename-file-and-buffer (new-name)
  "Renames both current buffer and file it's visiting to NEW-NAME."
  (interactive "sNew name: ")
  (let ((name (buffer-name))
        (filename (buffer-file-name)))
    (if (not filename)
        (message "Buffer '%s' is not visiting a file!" name)
      (if (get-buffer new-name)
          (message "A buffer named '%s' already exists!" new-name)
        (progn
          (rename-file filename new-name 1)
          (rename-buffer new-name)
          (set-visited-file-name new-name)
          (set-buffer-modified-p nil))))))

;; source:
;; TO-DO: Write code to write/create a new empty FILE given the PATH,
;; with an &optional HEADER.

;;
(eval-after-load 'dired
 '(progn
 (define-key dired-mode-map (kbd "C-c n") 'my-dired-create-file)
 (defun touch-file (file)
 "Create a file called FILE.
If FILE already exists, signal an error."
 (interactive
 (list (read-file-name "Create file: " (dired-current-directory))))
 (let* ((expanded (expand-file-name file))
  (try expanded)
  (dir (directory-file-name (file-name-directory expanded)))
  new)
  (if (file-exists-p expanded)
  (error "Cannot create file %s: file exists" expanded))
  ;; Find the topmost nonexistent parent dir (variable `new')
  (while (and try (not (file-exists-p try)) (not (equal new try)))
  (setq new try
   try (directory-file-name (file-name-directory try))))
  (when (not (file-exists-p dir))
  (make-directory dir t))
  (write-region "" nil expanded t)
  (when new
  (dired-add-file new)
  (dired-move-to-filename))))))
